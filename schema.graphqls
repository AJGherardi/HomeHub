type Device {
  addr: String!
  type: String!
  elements: [Element!]!
}

type Element {
  name: String!
  addr: String!
  state: State!
}

type Group {
  addr: String!
  name: String!
  devAddrs: [String!]!
}

type Mutation {
  addDevice(addr: String!, devUUID: String!, name: String!): Device!
  removeDevice(addr: String!): Device!
  removeGroup(addr: String!): Group!
  addGroup(name: String!): Group!
  configHub: String!
  resetHub: Boolean!
  setState(addr: String!, value: String!): State!
}

type ControlResponse {
  devices: [Device!]!
  groups: [Group!]!
}

type Query {
  availableDevices: [String!]!
  availableGroups: [Group]
  getState(devAddr: String!, elemNumber: Int!): State!
}

type Subscription {
  listControl: ControlResponse!
}

type State {
  state: String!
  stateType: String!
}


schema {
    query: Query
    mutation: Mutation
}